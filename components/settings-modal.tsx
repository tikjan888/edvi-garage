"use client"

import { useState, useEffect } from "react"
import { Dialog, DialogContent } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Switch } from "@/components/ui/switch"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Separator } from "@/components/ui/separator"
import { useAuth } from "@/contexts/auth-context"
import { useAdmin } from "@/contexts/admin-context"
import { useLanguage } from "@/contexts/language-context"
import { useNames } from "@/contexts/names-context"
import { PaymentSettings } from "./admin/payment-settings"
import { AdminControlPanel } from "./admin/admin-control-panel"
import {
  Settings,
  User,
  Bell,
  Shield,
  Palette,
  Globe,
  Crown,
  CreditCard,
  BarChart3,
  Cloud,
  Headphones,
  Code,
  Mail,
  FileText,
  Download,
  Zap,
  Star,
  Lock,
  X,
  ChevronDown,
  ArrowLeft,
} from "lucide-react"
import { toast } from "@/hooks/use-toast"
import { DetailedAnalyticsModal } from "./analytics/detailed-analytics-modal"

const DEFAULT_NAMES = { garage: "", car: "", expense: "", member: "" } as const

interface SettingsModalProps {
  isOpen: boolean
  onClose: () => void
}

export function SettingsModal({ isOpen, onClose }: SettingsModalProps) {
  const { user, signOut } = useAuth()
  const { userRole, isAdmin } = useAdmin()
  const { language, setLanguage } = useLanguage()
  const { names, updateNames } = useNames()

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞
  const isAdminUser = userRole === 1
  const isPro = userRole === 4 || isAdminUser
  const isStarter = userRole === 3 || isPro

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const [activeTab, setActiveTab] = useState("profile")
  const [emailNotifications, setEmailNotifications] = useState(true)
  const [pushNotifications, setPushNotifications] = useState(true)
  const [autoBackup, setAutoBackup] = useState(false)
  const [theme, setTheme] = useState("system")
  const [currency, setCurrency] = useState("EUR")

  // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
  const [showAdminPanel, setShowAdminPanel] = useState(false)
  const [showDetailedAnalytics, setShowDetailedAnalytics] = useState(false)

  const [showFeaturesSubmenu, setShowFeaturesSubmenu] = useState(false)
  const [activeFunctionTab, setActiveFunctionTab] = useState<string | null>(null)

  // –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const [localNames, setLocalNames] = useState(names ?? DEFAULT_NAMES)

  useEffect(() => {
    if (names) {
      setLocalNames(names)
    }
  }, [names])

  const handleSaveNames = () => {
    updateNames(localNames)
    toast({
      title: "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ",
      description: "–ù–∞–∑–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã",
    })
  }

  const handleSignOut = async () => {
    try {
      await signOut()
      onClose()
      toast({
        title: "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è",
        description: "–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
      })
    } catch (error) {
      toast({
        title: "‚ùå –û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
        variant: "destructive",
      })
    }
  }

  const getSubscriptionInfo = () => {
    if (isAdminUser) {
      return {
        type: "Admin",
        description: "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º",
        badge: "üëë Admin",
        color: "bg-yellow-500",
      }
    }

    switch (userRole) {
      case 4:
        return {
          type: "Pro",
          description: "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã",
          badge: "‚≠ê Pro",
          color: "bg-purple-500",
        }
      case 3:
        return {
          type: "Starter",
          description: "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
          badge: "üöÄ Starter",
          color: "bg-blue-500",
        }
      default:
        return {
          type: "Free",
          description: "–ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
          badge: "üÜì Free",
          color: "bg-gray-500",
        }
    }
  }

  const subscriptionInfo = getSubscriptionInfo()

  const menuItems = [
    { id: "profile", label: "–ü—Ä–æ—Ñ–∏–ª—å", icon: User },
    { id: "notifications", label: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", icon: Bell },
    { id: "appearance", label: "–í–Ω–µ—à–Ω–∏–π –≤–∏–¥", icon: Palette },
    { id: "names", label: "–ù–∞–∑–≤–∞–Ω–∏—è", icon: Globe },
    ...(isAdminUser ? [{ id: "payments", label: "–ü–ª–∞—Ç–µ–∂–∏", icon: CreditCard }] : []),
  ]

  const featureItems = [
    { id: "analytics", label: "–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", icon: BarChart3, requiresPro: true },
    { id: "backup", label: "–û–±–ª–∞—á–Ω—ã–µ –±—ç–∫–∞–ø—ã", icon: Cloud, requiresPro: true },
    { id: "support", label: "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", icon: Headphones, requiresPro: true },
    { id: "api", label: "API –¥–æ—Å—Ç—É–ø", icon: Code, requiresPro: true },
    { id: "email", label: "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤", icon: Mail, requiresStarter: true },
    { id: "pdf", label: "PDF —ç–∫—Å–ø–æ—Ä—Ç", icon: FileText, requiresStarter: true },
    { id: "excel", label: "Excel —ç–∫—Å–ø–æ—Ä—Ç", icon: Download, requiresStarter: true },
  ]

  const handleFeatureClick = (featureId: string) => {
    setActiveFunctionTab(featureId)
    setActiveTab("function-" + featureId)
  }

  const handleBackToFunctions = () => {
    setActiveFunctionTab(null)
    setActiveTab("features")
  }

  const renderFunctionContent = (functionId: string) => {
    const feature = featureItems.find((item) => item.id === functionId)
    if (!feature) return null

    const Icon = feature.icon
    const hasAccess = feature.requiresPro ? isPro : feature.requiresStarter ? isStarter : true

    if (!hasAccess) {
      return (
        <div className="space-y-6">
          <div className="flex items-center gap-3 mb-6">
            <Button variant="ghost" size="sm" onClick={handleBackToFunctions} className="p-2">
              <ArrowLeft className="h-4 w-4" />
            </Button>
            <Icon className="h-6 w-6 text-gray-400" />
            <h3 className="text-xl font-semibold text-gray-400">{feature.label}</h3>
            <Lock className="h-5 w-5 text-gray-400" />
          </div>

          <div className="text-center py-12">
            <Lock className="h-16 w-16 text-gray-300 mx-auto mb-4" />
            <h4 className="text-lg font-semibold text-gray-500 mb-2">–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h4>
            <p className="text-gray-400 mb-6">
              –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ "{feature.label}" –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–æ–¥–ø–∏—Å–∫–∞ {feature.requiresPro ? "Pro" : "Starter"}
            </p>
            <Button variant="outline" disabled>
              –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
            </Button>
          </div>
        </div>
      )
    }

    switch (functionId) {
      case "analytics":
        return (
          <div className="space-y-6">
            <div className="flex items-center gap-3 mb-6">
              <Button variant="ghost" size="sm" onClick={handleBackToFunctions} className="p-2">
                <ArrowLeft className="h-4 w-4" />
              </Button>
              <BarChart3 className="h-6 w-6 text-blue-600" />
              <h3 className="text-xl font-semibold">–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h3>
              {isAdminUser && <Crown className="h-5 w-5 text-yellow-500" />}
            </div>

            <div className="grid gap-4">
              <Card>
                <CardContent className="p-6">
                  <h4 className="font-semibold mb-3">üìä –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã</h4>
                  <p className="text-gray-600 mb-4">
                    –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤, –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ç—Ä–µ–Ω–¥–æ–≤ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏
                  </p>
                  <Button className="w-full" onClick={() => setShowDetailedAnalytics(true)}>
                    –û—Ç–∫—Ä—ã—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É
                  </Button>
                </CardContent>
              </Card>

              <Card>
                <CardContent className="p-6">
                  <h4 className="font-semibold mb-3">üìà –ì—Ä–∞—Ñ–∏–∫–∏ –∏ –¥–∏–∞–≥—Ä–∞–º–º—ã</h4>
                  <p className="text-gray-600 mb-4">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º</p>
                  <div className="grid grid-cols-3 gap-2 mb-4">
                    <div className="text-center p-2 bg-green-50 rounded">
                      <div className="text-lg font-bold text-green-600">‚Ç¨45K</div>
                      <div className="text-xs text-gray-500">–ü—Ä–∏–±—ã–ª—å</div>
                    </div>
                    <div className="text-center p-2 bg-blue-50 rounded">
                      <div className="text-lg font-bold text-blue-600">68%</div>
                      <div className="text-xs text-gray-500">–ö–æ–Ω–≤–µ—Ä—Å–∏—è</div>
                    </div>
                    <div className="text-center p-2 bg-purple-50 rounded">
                      <div className="text-lg font-bold text-purple-600">18–¥</div>
                      <div className="text-xs text-gray-500">–°–¥–µ–ª–∫–∞</div>
                    </div>
                  </div>
                  <Button variant="outline" className="w-full">
                    –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏
                  </Button>
                </CardContent>
              </Card>
            </div>
          </div>
        )

      case "backup":
        return (
          <div className="space-y-6">
            <div className="flex items-center gap-3 mb-6">
              <Button variant="ghost" size="sm" onClick={handleBackToFunctions} className="p-2">
                <ArrowLeft className="h-4 w-4" />
              </Button>
              <Cloud className="h-6 w-6 text-blue-600" />
              <h3 className="text-xl font-semibold">–û–±–ª–∞—á–Ω—ã–µ –±—ç–∫–∞–ø—ã</h3>
              {isAdminUser && <Crown className="h-5 w-5 text-yellow-500" />}
            </div>

            {/* –°—Ç–∞—Ç—É—Å –±—ç–∫–∞–ø–∞ */}
            <div className="grid grid-cols-3 gap-4 mb-6">
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-green-600">–ê–∫—Ç–∏–≤–µ–Ω</div>
                  <div className="text-sm text-gray-500">–°—Ç–∞—Ç—É—Å –±—ç–∫–∞–ø–∞</div>
                </CardContent>
              </Card>
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-blue-600">2.4 MB</div>
                  <div className="text-sm text-gray-500">–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö</div>
                </CardContent>
              </Card>
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-purple-600">–°–µ–≥–æ–¥–Ω—è 14:30</div>
                  <div className="text-sm text-gray-500">–ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø</div>
                </CardContent>
              </Card>
            </div>

            {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞ */}
            <Card>
              <CardContent className="p-6">
                <div className="flex items-center justify-between mb-4">
                  <div>
                    <h4 className="font-semibold">‚òÅÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</h4>
                    <p className="text-sm text-gray-600">–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –æ–±–ª–∞–∫–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å</p>
                  </div>
                  <Switch checked={autoBackup} onCheckedChange={setAutoBackup} />
                </div>

                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm">–í—Ä–µ–º—è –±—ç–∫–∞–ø–∞</span>
                    <Select defaultValue="14:30">
                      <SelectTrigger className="w-32">
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="02:00">02:00</SelectItem>
                        <SelectItem value="14:30">14:30</SelectItem>
                        <SelectItem value="22:00">22:00</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="flex items-center justify-between">
                    <span className="text-sm">–•—Ä–∞–Ω–∏—Ç—å –∫–æ–ø–∏–π</span>
                    <Select defaultValue="7">
                      <SelectTrigger className="w-32">
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="3">3 –¥–Ω—è</SelectItem>
                        <SelectItem value="7">7 –¥–Ω–µ–π</SelectItem>
                        <SelectItem value="30">30 –¥–Ω–µ–π</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* –†—É—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
            <div className="grid md:grid-cols-2 gap-4">
              <Card>
                <CardContent className="p-6">
                  <h4 className="font-semibold mb-3">üíæ –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø —Å–µ–π—á–∞—Å</h4>
                  <p className="text-gray-600 mb-4">–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å</p>
                  <Button
                    className="w-full"
                    onClick={() => {
                      toast({
                        title: "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞...",
                        description: "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–µ—Ç—Å—è, —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥",
                      })
                      setTimeout(() => {
                        toast({
                          title: "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω!",
                          description: "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –æ–±–ª–∞–∫–µ",
                        })
                      }, 3000)
                    }}
                  >
                    –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø
                  </Button>
                </CardContent>
              </Card>

              <Card>
                <CardContent className="p-6">
                  <h4 className="font-semibold mb-3">üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</h4>
                  <p className="text-gray-600 mb-4">–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏</p>
                  <Button
                    variant="outline"
                    className="w-full"
                    onClick={() => {
                      toast({
                        title: "‚ö†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö",
                        description: "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω–∏—Ç —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?",
                      })
                    }}
                  >
                    –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                  </Button>
                </CardContent>
              </Card>
            </div>

            {/* –ò—Å—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üìã –ò—Å—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤</h4>
                <div className="space-y-3">
                  {[
                    { date: "–°–µ–≥–æ–¥–Ω—è 14:30", size: "2.4 MB", status: "success" },
                    { date: "–í—á–µ—Ä–∞ 14:30", size: "2.3 MB", status: "success" },
                    { date: "2 –¥–Ω—è –Ω–∞–∑–∞–¥ 14:30", size: "2.2 MB", status: "success" },
                    { date: "3 –¥–Ω—è –Ω–∞–∑–∞–¥ 14:30", size: "2.1 MB", status: "failed" },
                  ].map((backup, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center gap-3">
                        {backup.status === "success" ? (
                          <div className="w-2 h-2 bg-green-500 rounded-full" />
                        ) : (
                          <div className="w-2 h-2 bg-red-500 rounded-full" />
                        )}
                        <div>
                          <div className="font-medium text-sm">{backup.date}</div>
                          <div className="text-xs text-gray-500">–†–∞–∑–º–µ—Ä: {backup.size}</div>
                        </div>
                      </div>
                      {backup.status === "success" && (
                        <Button size="sm" variant="ghost">
                          –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                        </Button>
                      )}
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )

      case "support":
        return (
          <div className="space-y-6">
            <div className="flex items-center gap-3 mb-6">
              <Button variant="ghost" size="sm" onClick={handleBackToFunctions} className="p-2">
                <ArrowLeft className="h-4 w-4" />
              </Button>
              <Headphones className="h-6 w-6 text-blue-600" />
              <h3 className="text-xl font-semibold">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
              {isAdminUser && <Crown className="h-5 w-5 text-yellow-500" />}
            </div>

            {/* –ö–∞–Ω–∞–ª—ã —Å–≤—è–∑–∏ */}
            <div className="grid gap-4 mb-6">
              <Card className="border-green-200 bg-green-50">
                <CardContent className="p-4">
                  <div className="flex items-center gap-4">
                    <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                      <Headphones className="h-6 w-6 text-green-600" />
                    </div>
                    <div className="flex-1">
                      <h4 className="font-semibold text-green-800">–ü—Ä—è–º–∞—è –ª–∏–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h4>
                      <p className="text-sm text-green-600">+7 (800) 123-45-67 ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ 24/7</p>
                    </div>
                    <Badge className="bg-green-600 text-white">Pro</Badge>
                  </div>
                </CardContent>
              </Card>

              <Card className="border-blue-200 bg-blue-50">
                <CardContent className="p-4">
                  <div className="flex items-center gap-4">
                    <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                      <Mail className="h-6 w-6 text-blue-600" />
                    </div>
                    <div className="flex-1">
                      <h4 className="font-semibold text-blue-800">Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
                      <p className="text-sm text-blue-600">pro-support@garage.com ‚Ä¢ –û—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç</p>
                    </div>
                    <Button size="sm" onClick={() => window.open("mailto:pro-support@garage.com")}>
                      –ù–∞–ø–∏—Å–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üé´ –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h4>
                <div className="space-y-4">
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <Label>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</Label>
                      <Select defaultValue="medium">
                        <SelectTrigger>
                          <SelectValue />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="low">–ù–∏–∑–∫–∏–π</SelectItem>
                          <SelectItem value="medium">–°—Ä–µ–¥–Ω–∏–π</SelectItem>
                          <SelectItem value="high">–í—ã—Å–æ–∫–∏–π</SelectItem>
                          <SelectItem value="critical">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                    <div>
                      <Label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</Label>
                      <Select defaultValue="technical">
                        <SelectTrigger>
                          <SelectValue />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="technical">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞</SelectItem>
                          <SelectItem value="billing">–í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ</SelectItem>
                          <SelectItem value="feature">–ó–∞–ø—Ä–æ—Å —Ñ—É–Ω–∫—Ü–∏–∏</SelectItem>
                          <SelectItem value="other">–î—Ä—É–≥–æ–µ</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>

                  <div>
                    <Label>–¢–µ–º–∞</Label>
                    <Input placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É" />
                  </div>

                  <div>
                    <Label>–û–ø–∏—Å–∞–Ω–∏–µ</Label>
                    <textarea
                      className="w-full p-3 border rounded-lg resize-none"
                      rows={4}
                      placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å"
                    />
                  </div>

                  <Button
                    className="w-full"
                    onClick={() => {
                      toast({
                        title: "üé´ –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω!",
                        description: "–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç",
                      })
                    }}
                  >
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–∏–∫–µ—Ç
                  </Button>
                </CardContent>
              </Card>

            {/* –ú–æ–∏ —Ç–∏–∫–µ—Ç—ã */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üìã –ú–æ–∏ —Ç–∏–∫–µ—Ç—ã</h4>
                <div className="space-y-3">
                  {[
                    { id: "#PRO-001", subject: "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π", status: "–í —Ä–∞–±–æ—Ç–µ", priority: "–í—ã—Å–æ–∫–∏–π" },
                    { id: "#PRO-002", subject: "–í–æ–ø—Ä–æ—Å –ø–æ —ç–∫—Å–ø–æ—Ä—Ç—É –¥–∞–Ω–Ω—ã—Ö", status: "–†–µ—à–µ–Ω", priority: "–°—Ä–µ–¥–Ω–∏–π" },
                  ].map((ticket, index) => (
                    <div key={index} className="p-4 border rounded-lg">
                      <div className="flex items-center justify-between mb-2">
                        <span className="font-medium">{ticket.id}</span>
                        <div className="flex gap-2">
                          <Badge variant={ticket.status === "–†–µ—à–µ–Ω" ? "default" : "secondary"}>{ticket.status}</Badge>
                          <Badge variant="outline">{ticket.priority}</Badge>
                        </div>
                      </div>
                      <p className="text-sm text-gray-600">{ticket.subject}</p>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )

      case "api":
        return (
          <div className="space-y-6">
            <div className="flex items-center gap-3 mb-6">
              <Button variant="ghost" size="sm" onClick={handleBackToFunctions} className="p-2">
                <ArrowLeft className="h-4 w-4" />
              </Button>
              <Code className="h-6 w-6 text-blue-600" />
              <h3 className="text-xl font-semibold">API –¥–æ—Å—Ç—É–ø</h3>
              {isAdminUser && <Crown className="h-5 w-5 text-yellow-500" />}
            </div>

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ API */}
            <div className="grid grid-cols-3 gap-4 mb-6">
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-green-600">1,247</div>
                  <div className="text-sm text-gray-500">–ó–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Ü</div>
                </CardContent>
              </Card>
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-blue-600">10,000</div>
                  <div className="text-sm text-gray-500">–õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤</div>
                </CardContent>
              </Card>
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-purple-600">99.9%</div>
                  <div className="text-sm text-gray-500">Uptime</div>
                </CardContent>
              </Card>
            </div>

            {/* API –∫–ª—é—á */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üîë –í–∞—à API –∫–ª—é—á</h4>
                <div className="space-y-4">
                  <div>
                    <Label>API –∫–ª—é—á</Label>
                    <div className="flex gap-2 mt-1">
                      <Input
                        type="password"
                        value="cfm_live_sk_1234567890abcdef1234567890abcdef"
                        readOnly
                        className="font-mono"
                      />
                      <Button
                        variant="outline"
                        size="sm"
                        onClick={() => {
                          navigator.clipboard.writeText("cfm_live_sk_1234567890abcdef1234567890abcdef")
                          toast({
                            title: "üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!",
                            description: "API –∫–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞",
                          })
                        }}
                      >
                        –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                      </Button>
                    </div>
                  </div>

                  <div className="flex gap-2">
                    <Button
                      variant="outline"
                      onClick={() => {
                        toast({
                          title: "üîÑ –ù–æ–≤—ã–π –∫–ª—é—á —Å–æ–∑–¥–∞–Ω!",
                          description: "–°—Ç–∞—Ä—ã–π –∫–ª—é—á –±–æ–ª—å—à–µ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω",
                        })
                      }}
                    >
                      –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üìö –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç</h4>
                <div className="space-y-4">
                  <div>
                    <h5 className="font-medium mb-2">–ë–∞–∑–æ–≤—ã–π URL</h5>
                    <div className="bg-gray-100 p-3 rounded-lg font-mono text-sm">https://api.garage.com/v1</div>
                  </div>

                  <div>
                    <h5 className="font-medium mb-2">–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</h5>
                    <div className="bg-gray-100 p-3 rounded-lg font-mono text-sm">
                      Authorization: Bearer YOUR_API_KEY
                    </div>
                  </div>

                  <div>
                    <h5 className="font-medium mb-2">–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞</h5>
                    <div className="bg-gray-900 text-gray-100 p-4 rounded-lg font-mono text-sm overflow-x-auto">
                      {`curl -X GET "https://api.garage.com/v1/garages" \\
  -H "Authorization: Bearer YOUR_API_KEY" \\
  -H "Content-Type: application/json"`}
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã</h4>
                <div className="space-y-3">
                  {[
                    { method: "GET", endpoint: "/garages", description: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–∞—Ä–∞–∂–µ–π" },
                    { method: "POST", endpoint: "/garages", description: "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –≥–∞—Ä–∞–∂" },
                    { method: "GET", endpoint: "/cars", description: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π" },
                    { method: "POST", endpoint: "/expenses", description: "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥" },
                    { method: "GET", endpoint: "/reports", description: "–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç—ã" },
                  ].map((api, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center gap-3">
                        <Badge variant={api.method === "GET" ? "secondary" : "default"}>{api.method}</Badge>
                        <code className="text-sm">{api.endpoint}</code>
                      </div>
                      <span className="text-sm text-gray-600">{api.description}</span>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )

      case "email":
        return (
          <div className="space-y-6">
            <div className="flex items-center gap-3 mb-6">
              <Button variant="ghost" size="sm" onClick={handleBackToFunctions} className="p-2">
                <ArrowLeft className="h-4 w-4" />
              </Button>
              <Mail className="h-6 w-6 text-blue-600" />
              <h3 className="text-xl font-semibold">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤</h3>
              {isAdminUser && <Crown className="h-5 w-5 text-yellow-500" />}
            </div>

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π */}
            <div className="grid grid-cols-3 gap-4 mb-6">
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-green-600">5</div>
                  <div className="text-sm text-gray-500">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</div>
                </CardContent>
              </Card>
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-blue-600">3</div>
                  <div className="text-sm text-gray-500">–ü—Ä–∏–Ω—è—Ç–æ</div>
                </CardContent>
              </Card>
              <Card>
                <CardContent className="p-4 text-center">
                  <div className="text-lg font-bold text-orange-600">2</div>
                  <div className="text-sm text-gray-500">–û–∂–∏–¥–∞—é—Ç</div>
                </CardContent>
              </Card>
            </div>

            {/* –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üìß –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞</h4>
                <div className="space-y-4">
                  <div>
                    <Label>Email –ø–∞—Ä—Ç–Ω—ë—Ä–∞</Label>
                    <Input placeholder="partner@example.com" type="email" />
                  </div>

                  <div>
                    <Label>–†–æ–ª—å</Label>
                    <Select defaultValue="partner">
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="partner">–ü–∞—Ä—Ç–Ω—ë—Ä (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø)</SelectItem>
                        <SelectItem value="viewer">–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å (—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä)</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div>
                    <Label>–°–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Label>
                    <textarea
                      className="w-full p-3 border rounded-lg resize-none"
                      rows={3}
                      placeholder="–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏–≥–ª–∞—à–∞—é —Ç–µ–±—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É –≥–∞—Ä–∞–∂—É..."
                    />
                  </div>

                  <Button
                    className="w-full"
                    onClick={() => {
                      toast({
                        title: "üìß –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!",
                        description: "–ü–∞—Ä—Ç–Ω—ë—Ä –ø–æ–ª—É—á–∏—Ç email —Å–æ —Å—Å—ã–ª–∫–æ–π –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
                      })
                    }}
                  >
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
                  </Button>
                </CardContent>
              </Card>

            {/* –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üë• –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è</h4>
                <div className="space-y-3">
                  {[
                    { email: "john@example.com", status: "accepted", role: "–ü–∞—Ä—Ç–Ω—ë—Ä", date: "2 –¥–Ω—è –Ω–∞–∑–∞–¥" },
                    { email: "mary@example.com", status: "pending", role: "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å", date: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥" },
                    { email: "alex@example.com", status: "pending", role: "–ü–∞—Ä—Ç–Ω—ë—Ä", date: "–°–µ–≥–æ–¥–Ω—è" },
                  ].map((invitation, index) => (
                    <div key={index} className="flex items-center justify-between p-4 border rounded-lg">
                      <div>
                        <div className="font-medium">{invitation.email}</div>
                        <div className="text-sm text-gray-500">
                          {invitation.role} ‚Ä¢ {invitation.date}
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <Badge variant={invitation.status === "accepted" ? "default" : "secondary"}>
                          {invitation.status === "accepted" ? "–ü—Ä–∏–Ω—è—Ç–æ" : "–û–∂–∏–¥–∞–µ—Ç"}
                        </Badge>
                        {invitation.status === "pending" && (
                          <Button
                            size="sm"
                            variant="outline"
                            onClick={() => {
                              toast({
                                title: "üìß –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ",
                                description: `–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ ${invitation.email}`,
                              })
                            }}
                          >
                            –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                          </Button>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π</h4>
                <div className="space-y-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <Label>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</Label>
                      <p className="text-sm text-gray-600">–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —á–µ—Ä–µ–∑ 3 –¥–Ω—è</p>
                    </div>
                    <Switch defaultChecked />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <Label>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–Ω—è—Ç–∏–∏</Label>
                      <p className="text-sm text-gray-600">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–≥–¥–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        )

      case "pdf":
        return (
          <div className="space-y-6">
            <div className="flex items-center gap-3 mb-6">
              <Button variant="ghost" size="sm" onClick={handleBackToFunctions} className="p-2">
                <ArrowLeft className="h-4 w-4" />
              </Button>
              <FileText className="h-6 w-6 text-blue-600" />
              <h3 className="text-xl font-semibold">PDF —ç–∫—Å–ø–æ—Ä—Ç</h3>
              {isAdminUser && <Crown className="h-5 w-5 text-yellow-500" />}
            </div>

            {/* –ë—ã—Å—Ç—Ä—ã–π —ç–∫—Å–ø–æ—Ä—Ç */}
            <div className="grid md:grid-cols-2 gap-4 mb-6">
              <Card>
                <CardContent className="p-6">
                  <h4 className="font-semibold mb-3">üìÑ –û—Ç—á–µ—Ç –ø–æ –≥–∞—Ä–∞–∂—É</h4>
                  <p className="text-gray-600 mb-4">–ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –≤—Å–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º –∏ —Ä–∞—Å—Ö–æ–¥–∞–º</p>
                  <Button
                    className="w-full"
                    onClick={() => {
                      toast({
                        title: "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ PDF...",
                        description: "–û—Ç—á–µ—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥",
                      })
                      setTimeout(() => {
                        toast({
                          title: "‚úÖ PDF –≥–æ—Ç–æ–≤!",
                          description: "–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ø–∞–ø–∫—É –ó–∞–≥—Ä—É–∑–∫–∏",
                        })
                      }, 2000)
                    }}
                  >
                    –°–∫–∞—á–∞—Ç—å PDF
                  </Button>
                </CardContent>
              </Card>

              <Card>
                <CardContent className="p-6">
                  <h4 className="font-semibold mb-3">üöó –û—Ç—á–µ—Ç –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—é</h4>
                  <p className="text-gray-600 mb-4">–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∞–≤—Ç–æ–º–æ–±–∏–ª—é</p>
                  <div className="space-y-3">
                    <Select>
                      <SelectTrigger>
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="bmw-x5">BMW X5 2020</SelectItem>
                        <SelectItem value="audi-a4">Audi A4 2019</SelectItem>
                        <SelectItem value="mercedes-c">Mercedes C-Class 2021</SelectItem>
                      </SelectContent>
                    </Select>
                    <Button variant="outline" className="w-full">
                      –°–∫–∞—á–∞—Ç—å PDF
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞</h4>
                <div className="grid md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <div>
                      <Label>–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞</Label>
                      <Select defaultValue="all">
                        <SelectTrigger>
                          <SelectValue />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="all">–í–µ—Å—å –ø–µ—Ä–∏–æ–¥</SelectItem>
                          <SelectItem value="year">–¢–µ–∫—É—â–∏–π –≥–æ–¥</SelectItem>
                          <SelectItem value="month">–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü</SelectItem>
                          <SelectItem value="custom">–í—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div>
                      <Label>–í–∫–ª—é—á–∏—Ç—å –≤ –æ—Ç—á–µ—Ç</Label>
                      <div className="space-y-2 mt-2">
                        <div className="flex items-center space-x-2">
                          <input type="checkbox" id="expenses" defaultChecked />
                          <Label htmlFor="expenses">–†–∞—Å—Ö–æ–¥—ã</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <input type="checkbox" id="income" defaultChecked />
                          <Label htmlFor="income">–î–æ—Ö–æ–¥—ã</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <input type="checkbox" id="charts" defaultChecked />
                          <Label htmlFor="charts">–ì—Ä–∞—Ñ–∏–∫–∏</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <input type="checkbox" id="photos" />
                          <Label htmlFor="photos">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</Label>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="space-y-4">
                    <div>
                      <Label>–§–æ—Ä–º–∞—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã</Label>
                      <Select defaultValue="a4">
                        <SelectTrigger>
                          <SelectValue />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="a4">A4</SelectItem>
                          <SelectItem value="a3">A3</SelectItem>
                          <SelectItem value="letter">Letter</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div>
                      <Label>–û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è</Label>
                      <Select defaultValue="portrait">
                        <SelectTrigger>
                          <SelectValue />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="portrait">–ö–Ω–∏–∂–Ω–∞—è</SelectItem>
                          <SelectItem value="landscape">–ê–ª—å–±–æ–º–Ω–∞—è</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div className="flex items-center space-x-2">
                      <input type="checkbox" id="watermark" />
                      <Label htmlFor="watermark">–î–æ–±–∞–≤–∏—Ç—å –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫</Label>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* –®–∞–±–ª–æ–Ω—ã */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üìã –®–∞–±–ª–æ–Ω—ã –æ—Ç—á–µ—Ç–æ–≤</h4>
                <div className="grid md:grid-cols-3 gap-4">
                  {[
                    { name: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π", description: "–ë–∞–∑–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏" },
                    { name: "–î–µ—Ç–∞–ª—å–Ω—ã–π", description: "–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ –≤—Å–µ–º–∏ –¥–µ—Ç–∞–ª—è–º–∏" },
                    { name: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π", description: "–§–æ–∫—É—Å –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è—Ö" },
                  ].map((template, index) => (
                    <Card key={index} className="cursor-pointer hover:shadow-md transition-shadow">
                      <CardContent className="p-4">
                        <h5 className="font-medium mb-2">{template.name}</h5>
                        <p className="text-sm text-gray-600 mb-3">{template.description}</p>
                        <Button size="sm" variant="outline" className="w-full">
                          –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
                        </Button>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* –ò—Å—Ç–æ—Ä–∏—è —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ */}
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-4">üìÅ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç—ã</h4>
                <div className="space-y-3">
                  {[
                    { name: "–û—Ç—á–µ—Ç_–ì–∞—Ä–∞–∂_2024.pdf", date: "–°–µ–≥–æ–¥–Ω—è 15:30", size: "2.1 MB" },
                    { name: "BMW_X5_–î–µ—Ç–∞–ª—å–Ω—ã–π.pdf", date: "–í—á–µ—Ä–∞ 10:15", size: "1.8 MB" },
                    { name: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π_–æ—Ç—á–µ—Ç_–Ø–Ω–≤–∞—Ä—å.pdf", date: "3 –¥–Ω—è –Ω–∞–∑–∞–¥", size: "1.2 MB" },
                  ].map((file, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center gap-3">
                        <FileText className="h-5 w-5 text-red-600" />
                        <div>
                          <div className="font-medium text-sm">{file.name}</div>
                          <div className="text-xs text-gray-500">
                            {file.date} ‚Ä¢ {file.size}
                          </div>
                        </div>
                      </div>
                      <Button size="sm" variant="ghost">
                        –°–∫–∞—á–∞—Ç—å
                      </Button>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )

      case "excel":
        return (
        <div className="space-y-6">
          <div className="flex items-center gap-3 mb-6">
            <Button variant="ghost" size="sm" onClick={handleBackToFunctions} className="p-2">
              <ArrowLeft className="h-4 w-4" />
            </Button>
            <Download className="h-6 w-6 text-blue-600" />
            <h3 className="text-xl font-semibold">Excel —ç–∫—Å–ø–æ—Ä—Ç</h3>
            {isAdminUser && <Crown className="h-5 w-5 text-yellow-500" />}
          </div>

          {/* –ë—ã—Å—Ç—Ä—ã–π —ç–∫—Å–ø–æ—Ä—Ç */}
          <div className="grid md:grid-cols-2 gap-4 mb-6">
            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-3">üìä –í—Å–µ –¥–∞–Ω–Ω—ã–µ</h4>
                <p className="text-gray-600 mb-4">–≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª</p>
                <Button 
                  className="w-full"
                  onClick={() => {
                    toast({
                      title: "üìä –°–æ–∑–¥–∞–Ω–∏–µ Excel...",
                      description: "–§–∞–π–ª –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
                    })
                    setTimeout(() => {
                      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π CSV —Ñ–∞–π–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
                      const csvContent = `–ê–≤—Ç–æ–º–æ–±–∏–ª—å,–î–∞—Ç–∞,–û–ø–∏—Å–∞–Ω–∏–µ,–°—É–º–º–∞,–¢–∏–ø
BMW X5,2024-01-15,–ü–æ–∫—É–ø–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è,25000,–†–∞—Å—Ö–æ–¥
BMW X5,2024-01-16,–†–µ–º–æ–Ω—Ç –¥–≤–∏–≥–∞—Ç–µ–ª—è,1500,–†–∞—Å—Ö–æ–¥
BMW X5,2024-01-20,–ü—Ä–æ–¥–∞–∂–∞,30000,–î–æ—Ö–æ–¥
Audi A4,2024-01-10,–ü–æ–∫—É–ø–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è,18000,–†–∞—Å—Ö–æ–¥
Audi A4,2024-01-12,–ó–∞–º–µ–Ω–∞ —à–∏–Ω,800,–†–∞—Å—Ö–æ–¥`
                      
                      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })
                      const link = document.createElement('a')
                      const url = URL.createObjectURL(blob)
                      link.setAttribute('href', url)
                      link.setAttribute('download', 'garage_data.csv')
                      link.style.visibility = 'hidden'
                      document.body.appendChild(link)
                      link.click()
                      document.body.removeChild(link)
                      
                      toast({
                        title: "‚úÖ Excel —Ñ–∞–π–ª –≥–æ—Ç–æ–≤!",
                        description: "–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ø–∞–ø–∫—É –ó–∞–≥—Ä—É–∑–∫–∏"
                      })
                    }, 2000)
                  }}
                >
                  –°–∫–∞—á–∞—Ç—å Excel
                </Button>
              </CardContent>
            </Card>

            <Card>
              <CardContent className="p-6">
                <h4 className="font-semibold mb-3">üöó –ü–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º</h4>
                <p className="text-gray-600 mb-4">–û—Ç–¥–µ–ª—å–Ω—ã–µ –ª–∏—Å—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è</p>
                <Button 
                  variant="outline" 
                  className="w-full"
                  onClick={() => {
                    toast({
                      title: "üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞...",
                      description: "–°–æ–∑–¥–∞–µ—Ç—Å—è —Ñ–∞–π–ª —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –ª–∏—Å—Ç–∞–º–∏"
                    })
                  }}
                >
                  –°–∫–∞—á–∞—Ç—å Excel
                </Button>
              </CardContent>
            </Card>
          </div>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ */}
          <Card>
            <CardContent className="p-6">
              <h4 className="font-semibold mb-4">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞</h4>
              <div className="grid md:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <div>
                    <Label>–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞</Label>
                    <Select defaultValue="xlsx">
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="xlsx">Excel (.xlsx)</SelectItem>
                        <SelectItem value="csv">CSV (.csv)</SelectItem>
                        <SelectItem value="ods">OpenDocument (.ods)</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <div>
                    <Label>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö</Label>
                    <Select defaultValue="detailed">
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="detailed">–î–µ—Ç–∞–ª—å–Ω–∞—è</SelectItem>
                        <SelectItem value="summary">–°–≤–æ–¥–Ω–∞—è</SelectItem>
                        <SelectItem value="pivot">–°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <div>
                    <Label>–ü–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö</Label>
                    <Select defaultValue="all">
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="all">–í–µ—Å—å –ø–µ—Ä–∏–æ–¥</SelectItem>
                        <SelectItem value="year">–¢–µ–∫—É—â–∏–π –≥–æ–¥</SelectItem>
                        <SelectItem value="month">–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü</SelectItem>
                        <SelectItem value="quarter">–¢–µ–∫—É—â–∏–π –∫–≤–∞—Ä—Ç–∞–ª</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>
                
                <div className="space-y-4">
                  <div>
                    <Label>–í–∫–ª—é—á–∏—Ç—å –ª–∏—Å—Ç—ã</Label>
                    <div className="space-y-2 mt-2">
                      <div className="flex items-center space-x-2">
                        <input type="checkbox" id="cars-sheet" defaultChecked />
                        <Label htmlFor="cars-sheet">–ê–≤—Ç–æ–º–æ–±–∏–ª–∏</Label>
                      </div>
                      <div className="flex items-center space-x-2">
                        <input type="checkbox" id="expenses-sheet" defaultChecked />
                        <Label htmlFor="expenses-sheet">–†–∞—Å—Ö–æ–¥—ã</Label>
                      </div>
                      <div className="flex items-center space-x-2">
                        <input type="checkbox" id="income-sheet" defaultChecked />
                        <Label htmlFor="income-sheet">–î–æ—Ö–æ–¥—ã</Label>
                      </div>
                      <div className="flex items-center space-x-2">
                        <input type="checkbox" id="summary-sheet" defaultChecked />
                        <Label htmlFor="summary-sheet">–°–≤–æ–¥–∫–∞</Label>
                      </div>
                      <div className="flex items-center space-x-2">
                        <input type="checkbox" id="charts-sheet" />
                        <Label htmlFor="charts-sheet">–ì—Ä–∞—Ñ–∏–∫–∏</Label>
                      </div>
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-2">
                    <input type="checkbox" id="formulas" defaultChecked />
                    <Label htmlFor="formulas">–í–∫–ª—é—á–∏—Ç—å —Ñ–æ—Ä–º—É–ª—ã</Label>
                  </div>
                  
                  <div className="flex items-center space-x-2">
                    <input type="checkbox" id="formatting" defaultChecked />
                    <Label htmlFor="formatting">–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</Label>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–æ—Ä—Ç */}
          <Card>
            <CardContent className="p-6">
              <h4 className="font-semibold mb-4">üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–æ—Ä—Ç</h4>
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <Label>–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—ç–∫—Å–ø–æ—Ä—Ç</Label>
                    <p className="text-sm text-gray-600">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å Excel —Ñ–∞–π–ª—ã</p>
                  </div>
                  <Switch />
                </div>
                
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label>–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å</Label>
                    <Select defaultValue="monthly">
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</SelectItem>
                        <SelectItem value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</SelectItem>
                        <SelectItem value="monthly">–ï–∂–µ–º–µ—Å—è—á–Ω–æ</SelectItem>
                        <SelectItem value="quarterly">–ï–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ</SelectItem>
                      </SelectContent>
                  </div>
                  
                  <div>
                    <Label>Email –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏</Label>
                    <Input placeholder="your@email.com" type="email" />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –®–∞–±–ª–æ–Ω—ã */}
          <Card>
            <CardContent className="p-6">
              <h4 className="font-semibold mb-4">üìã –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã</h4>
              <div className="grid md:grid-cols-2 gap-4">
                {[
                  { 
                    name: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç", 
                    description: "–î–æ—Ö–æ–¥—ã, —Ä–∞—Å—Ö–æ–¥—ã, –ø—Ä–∏–±—ã–ª—å –ø–æ –º–µ—Å—è—Ü–∞–º",
                    sheets: ["–°–≤–æ–¥–∫–∞", "–†–∞—Å—Ö–æ–¥—ã", "–î–æ—Ö–æ–¥—ã", "–ì—Ä–∞—Ñ–∏–∫–∏"]
                  },
                  { 
                    name: "–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è", 
                    description: "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏",
                    sheets: ["–ê–≤—Ç–æ–º–æ–±–∏–ª–∏", "–¢–µ—Ö–æ—Å–º–æ—Ç—Ä", "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞"]
                  },
                  { 
                    name: "–ù–∞–ª–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç", 
                    description: "–î–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞–ª–æ–≥–æ–≤–æ–π –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏",
                    sheets: ["–î–æ—Ö–æ–¥—ã", "–†–∞—Å—Ö–æ–¥—ã", "–ù–î–°", "–ü—Ä–∏–±—ã–ª—å"]
                  },
                  { 
                    name: "–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏", 
                    description: "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ –∫–∞–∂–¥–æ–º—É –∞–≤—Ç–æ–º–æ–±–∏–ª—é",
                    sheets: ["–ê–Ω–∞–ª–∏–∑", "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ", "–¢—Ä–µ–Ω–¥—ã"]
                  },
                ].map((template, index) => (
                  <Card key={index} className="cursor-pointer hover:shadow-md transition-shadow">
                    <CardContent className="p-4">
                      <h5 className="font-medium mb-2">{template.name}</h5>
                      <p className="text-sm text-gray-600 mb-3">{template.description}</p>
                      <div className="flex flex-wrap gap-1 mb-3">
                        {template.sheets.map((sheet, i) => (
                          <Badge key={i} variant="outline" className="text-xs">
                            {sheet}
                          </Badge>
                        ))}
                      </div>
                      <Button 
                        size="sm" 
                        variant="outline" 
                        className="w-full"
                        onClick={() => {
                          toast({
                            title: `üìä –°–æ–∑–¥–∞–Ω–∏–µ "${template.name}"`,
                            description: "–§–∞–π–ª –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
                          })
                        }}
                      >
                        –°–∫–∞—á–∞—Ç—å
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* –ò—Å—Ç–æ—Ä–∏—è —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ */}
          <Card>
            <CardContent className="p-6">
              <h4 className="font-semibold mb-4">üìÅ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç—ã</h4>
              <div className="space-y-3">
                {[
                  { name: "Garage_Data_2024.xlsx", date: "–°–µ–≥–æ–¥–Ω—è 16:45", size: "1.2 MB", type: "–í—Å–µ –¥–∞–Ω–Ω—ã–µ" },
                  { name: "Financial_Report_Jan.xlsx", date: "–í—á–µ—Ä–∞ 09:30", size: "856 KB", type: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π" },
                  { name: "Cars_Inventory.xlsx", date: "2 –¥–Ω—è –Ω–∞–∑–∞–¥", size: "445 KB", type: "–ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è" },
                ].map((file, index) => (
                  <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div className="flex items-center gap-3">
                      <Download className="h-5 w-5 text-green-600" />
                      <div>
                        <div className="font-medium text-sm">{file.name}</div>
                        <div className="text-xs text-gray-500">{file.date} ‚Ä¢ {file.size} ‚Ä¢ {file.type}</div>
                      </div>
                    </div>
                    <div className="flex gap-2">
                      <Button size="sm" variant="ghost">
                        –°–∫–∞—á–∞—Ç—å
                      </Button>
                      <Button 
                        size="sm" 
                        variant="ghost"
                        onClick={() => {
                          toast({
                            title: "üìä –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞...",
                            description: "–°–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
                          })
                        }}
                      >
                        –û–±–Ω–æ–≤–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
      )

    default:
      return null
  }
}

  const renderContent = () => {
    // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—ë –∫–æ–Ω—Ç–µ–Ω—Ç
    if (activeFunctionTab) {
      return renderFunctionContent(activeFunctionTab)
    }

    switch (activeTab) {
      case "profile":
        return (
          <div className="space-y-6">
            <div className="flex items-center gap-4">
              <div className="h-16 w-16 rounded-full bg-blue-100 flex items-center justify-center">
                <User className="h-8 w-8 text-blue-600" />
              </div>
              <div>
                <h3 className="text-lg font-semibold">{user?.displayName || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}</h3>
                <p className="text-gray-600">{user?.email}</p>
                <Badge className={`${subscriptionInfo.color} text-white mt-1`}>{subscriptionInfo.badge}</Badge>
              </div>
            </div>

            <Separator />

            <div className="space-y-4">
              <div>
                <Label htmlFor="displayName">–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è</Label>
                <Input id="displayName" defaultValue={user?.displayName || ""} placeholder="–í–∞—à–µ –∏–º—è" />
              </div>

              <div>
                <Label htmlFor="email">Email</Label>
                <Input id="email" type="email" value={user?.email || ""} disabled className="bg-gray-50" />
              </div>

              <div className="p-4 bg-blue-50 rounded-lg">
                <h4 className="font-medium text-blue-800 mb-1">–ü–æ–¥–ø–∏—Å–∫–∞: {subscriptionInfo.type}</h4>
                <p className="text-sm text-blue-600">{subscriptionInfo.description}</p>
              </div>
            </div>

            <div className="flex gap-2">
              <Button onClick={handleSignOut} variant="outline" className="flex-1">
                –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
              </Button>
            </div>
          </div>
        )

      case "notifications":
        return (
          <div className="space-y-6">
            <div>
              <h3 className="text-lg font-semibold mb-4">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>

              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div>
                    <Label>Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                    <p className="text-sm text-gray-600">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ email</p>
                  </div>
                  <Switch checked={emailNotifications} onCheckedChange={setEmailNotifications} />
                </div>

                <div className="flex items-center justify-between">
                  <div>
                    <Label>Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
                    <p className="text-sm text-gray-600">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
                  </div>
                  <Switch checked={pushNotifications} onCheckedChange={setPushNotifications} />
                </div>

                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-2">
                    <Label>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø</Label>
                    {!isPro && <Lock className="h-4 w-4 text-gray-400" />}
                    {isAdminUser && <Crown className="h-4 w-4 text-yellow-500" />}
                  </div>
                  <Switch checked={autoBackup} onCheckedChange={setAutoBackup} disabled={!isPro} />
                </div>
              </div>
            </div>
          </div>
        )

      case "appearance":
        return (
          <div className="space-y-6">
            <div>
              <h3 className="text-lg font-semibold mb-4">–í–Ω–µ—à–Ω–∏–π –≤–∏–¥</h3>

              <div className="space-y-4">
                <div>
                  <Label>–¢–µ–º–∞</Label>
                  <Select value={theme} onValueChange={setTheme}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="light">–°–≤–µ—Ç–ª–∞—è</SelectItem>
                      <SelectItem value="dark">–¢–µ–º–Ω–∞—è</SelectItem>
                      <SelectItem value="system">–°–∏—Å—Ç–µ–º–Ω–∞—è</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <Label>–Ø–∑—ã–∫</Label>
                  <Select value={language} onValueChange={setLanguage}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="ru">–†—É—Å—Å–∫–∏–π</SelectItem>
                      <SelectItem value="en">English</SelectItem>
                      <SelectItem value="de">Deutsch</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <Label>–í–∞–ª—é—Ç–∞</Label>
                  <Select value={currency} onValueChange={setCurrency}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="EUR">EUR (‚Ç¨)</SelectItem>
                      <SelectItem value="USD">USD ($)</SelectItem>
                      <SelectItem value="RUB">RUB (‚ÇΩ)</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>
            </div>
          </div>
        )

      case "names":
        return (
          <div className="space-y-6">
            <div>
              <h3 className="text-lg font-semibold mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π</h3>
              <p className="text-gray-600 mb-4">–ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã</p>

              <div className="space-y-4">
                <div>
                  <Label htmlFor="garage">–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è "–ì–∞—Ä–∞–∂"</Label>
                  <Input
                    id="garage"
                    value={localNames.garage}
                    onChange={(e) => setLocalNames({ ...localNames, garage: e.target.value })}
                    placeholder="–ì–∞—Ä–∞–∂"
                  />
                </div>

                <div>
                  <Label htmlFor="car">–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è "–ê–≤—Ç–æ–º–æ–±–∏–ª—å"</Label>
                  <Input
                    id="car"
                    value={localNames.car}
                    onChange={(e) => setLocalNames({ ...localNames, car: e.target.value })}
                    placeholder="–ê–≤—Ç–æ–º–æ–±–∏–ª—å"
                  />
                </div>

                <div>
                  <Label htmlFor="expense">–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è "–†–∞—Å—Ö–æ–¥"</Label>
                  <Input
                    id="expense"
                    value={localNames.expense}
                    onChange={(e) => setLocalNames({ ...localNames, expense: e.target.value })}
                    placeholder="–†–∞—Å—Ö–æ–¥"
                  />
                </div>

                <div>
                  <Label htmlFor="member">–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è "–£—á–∞—Å—Ç–Ω–∏–∫"</Label>
                  <Input
                    id="member"
                    value={localNames.member}
                    onChange={(e) => setLocalNames({ ...localNames, member: e.target.value })}
                    placeholder="–£—á–∞—Å—Ç–Ω–∏–∫"
                  />
                </div>
              </div>

              <Button onClick={handleSaveNames} className="w-full mt-4">
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è
              </Button>
            </div>
          </div>
        )

      case "payments":
        return (
          <div className="space-y-6">
            {isAdminUser ? (
              <PaymentSettings />
            ) : (
              <div className="text-center py-8">
                <Lock className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                <h3 className="text-lg font-semibold mb-2">–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω</h3>
                <p className="text-gray-600">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º</p>
              </div>
            )}
          </div>
        )

      case "features":
        return (
          <div className="space-y-6">
            <div className="text-center py-8">
              <Zap className="h-12 w-12 text-gray-400 mx-auto mb-4" />
              <h3 className="text-lg font-semibold mb-2">–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é</h3>
              <p className="text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–µ–Ω—é —Å–ª–µ–≤–∞</p>
            </div>
          </div>
        )

      case "about":
        return (
          <div className="space-y-6">
            <div className="text-center">
              <div className="h-16 w-16 rounded-full bg-blue-100 flex items-center justify-center mx-auto mb-4">
                <Settings className="h-8 w-8 text-blue-600" />
              </div>
              <h3 className="text-xl font-semibold mb-2">Garage Manager</h3>
              <p className="text-gray-600 mb-4">–í–µ—Ä—Å–∏—è 2.0.0</p>

              {isAdminUser && <Badge className="bg-yellow-500 text-white mb-4">üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø</Badge>}
            </div>

            <div className="space-y-4">
              <div className="p-4 bg-gray-50 rounded-lg">
                <h4 className="font-medium mb-2">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –ø–ª–∞–Ω–∞:</h4>
                <ul className="text-sm space-y-1">
                  <li>‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–∞—Ä–∞–∂–∞–º–∏ –∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏</li>
                  <li>‚úÖ –£—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –¥–æ—Ö–æ–¥–æ–≤</li>
                  <li>‚úÖ –ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</li>
                  {isStarter && <li>‚úÖ Email –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è</li>}
                  {isStarter && <li>‚úÖ PDF/Excel —ç–∫—Å–ø–æ—Ä—Ç</li>}
                  {isPro && <li>‚úÖ –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</li>}
                  {isPro && <li>‚úÖ –û–±–ª–∞—á–Ω—ã–µ –±—ç–∫–∞–ø—ã</li>}
                  {isPro && <li>‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</li>}
                  {isPro && <li>‚úÖ API –¥–æ—Å—Ç—É–ø</li>}
                  {isAdminUser && <li>üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</li>}
                </ul>
              </div>

              <div className="text-center text-sm text-gray-500">
                <p>¬© 2024 Garage Manager. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
                <p className="mt-1">–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è –∞–≤—Ç–æ–ª—é–±–∏—Ç–µ–ª–µ–π</p>
              </div>
            </div>
          </div>
        )

      default:
        return null
    }
  }

  return (
    <>
      <Dialog open={isOpen} onOpenChange={onClose}>
        <DialogContent className="max-w-6xl max-h-[90vh] overflow-hidden p-0 settings-modal">
          <div className="flex h-[80vh]">
            {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –º–µ–Ω—é */}
            <div className="w-64 bg-gray-50 border-r border-gray-200 flex flex-col">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <div className="p-4 border-b border-gray-200">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-2">
                    <Settings className="h-5 w-5" />
                    <h2 className="font-semibold">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                    {isAdminUser && <Crown className="h-4 w-4 text-yellow-500" />}
                  </div>
                  <Button variant="ghost" size="sm" onClick={onClose} className="h-8 w-8 p-0">
                    <X className="h-4 w-4" />
                  </Button>
                </div>
              </div>

              {/* –ú–µ–Ω—é */}
              <div className="flex-1 p-2 overflow-y-auto">
                <nav className="space-y-1">
                  {menuItems.map((item) => {
                    const Icon = item.icon
                    return (
                      <button
                        key={item.id}
                        onClick={() => {
                          setActiveTab(item.id)
                          setActiveFunctionTab(null)
                        }}
                        className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors text-left ${
                          activeTab === item.id ? "bg-blue-100 text-blue-700" : "text-gray-700 hover:bg-gray-100"
                        }`}
                      >
                        <Icon className="h-4 w-4" />
                        {item.label}
                      </button>
                    )
                  })}

                  {/* –§—É–Ω–∫—Ü–∏–∏ —Å –ø–æ–¥–º–µ–Ω—é */}
                  <div>
                    <button
                      onClick={() => setShowFeaturesSubmenu(!showFeaturesSubmenu)}
                      className="w-full flex items-center gap-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors text-left text-gray-700 hover:bg-gray-100"
                    >
                      <Zap className="h-4 w-4" />
                      –§—É–Ω–∫—Ü–∏–∏
                      <ChevronDown
                        className={`h-4 w-4 ml-auto transition-transform ${showFeaturesSubmenu ? "rotate-180" : ""}`}
                      />
                    </button>

                    {/* –ü–æ–¥–º–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏–π */}
                    {showFeaturesSubmenu && (
                      <div className="ml-4 mt-1 space-y-1">
                        {featureItems.map((item) => {
                          const Icon = item.icon
                          const hasAccess = item.requiresPro ? isPro : item.requiresStarter ? isStarter : true

                          return (
                            <button
                              key={item.id}
                              onClick={() => hasAccess && handleFeatureClick(item.id)}
                              className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg text-sm transition-colors text-left ${
                                hasAccess
                                  ? activeFunctionTab === item.id
                                    ? "bg-blue-100 text-blue-700"
                                    : "text-gray-600 hover:bg-gray-100"
                                  : "text-gray-400 cursor-not-allowed"
                              }`}
                            >
                              <Icon className="h-4 w-4" />
                              {item.label}
                              {!hasAccess && <Lock className="h-3 w-3 ml-auto" />}
                              {isAdminUser && <Crown className="h-3 w-3 ml-auto text-yellow-500" />}
                            </button>
                          )
                        })}
                      </div>
                    )}
                  </div>

                  {/* –û –ø—Ä–æ–≥—Ä–∞–º–º–µ - –≤—Å–µ–≥–¥–∞ –≤–Ω–∏–∑—É */}
                  <button
                    onClick={() => {
                      setActiveTab("about")
                      setActiveFunctionTab(null)
                    }}
                    className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors text-left ${
                      activeTab === "about" ? "bg-blue-100 text-blue-700" : "text-gray-700 hover:bg-gray-100"
                    }`}
                  >
                    <Star className="h-4 w-4" />–û –ø—Ä–æ–≥—Ä–∞–º–º–µ
                  </button>
                </nav>

                {/* –ê–¥–º–∏–Ω –∫–Ω–æ–ø–∫–∞ */}
                {isAdminUser && (
                  <div className="mt-6 pt-4 border-t border-gray-200">
                    <Button
                      onClick={() => setShowAdminPanel(true)}
                      className="w-full bg-yellow-500 hover:bg-yellow-600 text-white"
                    >
                      <Shield className="h-4 w-4 mr-2" />
                      –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                    </Button>
                  </div>
                )}
              </div>
            </div>

            {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */}
            <div className="flex-1 flex flex-col">
              <div className="flex-1 p-6 overflow-y-auto">{renderContent()}</div>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {showAdminPanel && <AdminControlPanel isOpen={showAdminPanel} onClose={() => setShowAdminPanel(false)} />}

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
      {showDetailedAnalytics && (
        <DetailedAnalyticsModal isOpen={showDetailedAnalytics} onClose={() => setShowDetailedAnalytics(false)} />
      )}
    </>
  )
}

// ‚Äî‚Äî EXPORTS ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
// Keep the named export (already present via the function) and
// add a default export so either `import SettingsModal ‚Ä¶` or
// `import { SettingsModal } ‚Ä¶` both work.
export default SettingsModal
